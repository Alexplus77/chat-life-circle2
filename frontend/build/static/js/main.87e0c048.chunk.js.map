{"version":3,"sources":["App.js","index.js"],"names":["App","useState","data","setData","value","setValue","setIsLoading","useEffect","fetch","then","response","json","handleSubmit","e","preventDefault","method","headers","body","JSON","stringify","message","map","onSubmit","onChange","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JAiDeA,MA9Cf,WACI,MAAsBC,mBAAS,MAA/B,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAcC,EAAd,KACJ,EAAgCJ,oBAAS,GAAzC,mBAAkBK,GAAlB,WAEIC,qBAAU,WACPD,GAAa,GACZE,MAAM,QAAQC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAAQF,MAAK,SAAAP,GAC/CI,GAAa,GACbH,EAAQD,QAEd,IAEF,IACMU,EAAa,SAACC,GAChBA,EAAEC,iBACFR,GAAa,GACbE,MAAM,OAAO,CACVO,OAAO,OACNC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAACC,QAAQhB,MAC/BK,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAAQF,MAAK,SAAAP,GACpCI,GAAa,GACbH,EAAQD,GACRG,EAAS,QAKnB,OACC,kOAEMH,EAAD,OAAuBA,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAMmB,KAAI,gBAAED,EAAF,EAAEA,QAAF,OAAa,8BAAoBA,GAAVA,MAAhD,aACT,uBAAME,SAAUV,EAAhB,UACI,0CACI,uBAAOW,SAxBC,SAACV,GAAD,OAAKR,EAASQ,EAAEW,OAAOpB,QAwBAA,MAAOA,OAErD,wBAAQkB,SAAUV,EAAlB,2BCrCAa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.87e0c048.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport 'App.css';\n\nfunction App() {\n    const [data, setData]=useState(null)\n    const [value, setValue]=useState('')\nconst [isLoading, setIsLoading]=useState(false)\n\n    useEffect(()=>{\n       setIsLoading(true)\n        fetch('/api').then(response=>response.json()).then(data=>{\n            setIsLoading(false)\n            setData(data)\n        })\n    },[])\n\n    const handleChange=(e)=>setValue(e.target.value)\n    const handleSubmit=(e)=>{\n        e.preventDefault()\n        setIsLoading(true)\n        fetch('/api',{\n           method:'POST',\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify({message:value})\n        }).then(response=>response.json()).then(data=>{\n            setIsLoading(false)\n            setData(data)\n            setValue('')\n        })\n    }\n\n\n  return (\n   <div>\n/** Нужно реализовать иконку загрузки **/\n       {!data ? 'Loading...' : data?.map(({message})=><div key={message}>{message}</div>) }\n       <form onSubmit={handleSubmit}>\n           <label>Input\n               <input onChange={handleChange} value={value}/>\n           </label>\n<button onSubmit={handleSubmit}>Submit</button>\n       </form>\n\n   </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}